services:
  circuits-app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: circuits-app-dev
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "3000:3000"    # Metro bundler
      - "19000:19000"  # Expo DevTools
      - "19001:19001"  # Expo tunnel
      - "19002:19002"  # Expo tunnel
    environment:
      - NODE_ENV=development
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://circuits_user:circuits_password@postgres:5432/circuits_dev
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - circuits-network
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: circuits-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - circuits-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: circuits-postgres
    environment:
      POSTGRES_DB: circuits_dev
      POSTGRES_USER: circuits_user
      POSTGRES_PASSWORD: circuits_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U circuits_user -d circuits_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - circuits-network

networks:
  circuits-network:
    driver: bridge

volumes:
  redis-data:
  postgres-data: 